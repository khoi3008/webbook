CREATE TABLE address
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    street              TEXT,
    city                TEXT,
    state_province      TEXT,
    country             TEXT,
    zip_code            TEXT,
    first_name          TEXT,
    last_name           TEXT,
    phone_number        VARCHAR(255),
    is_default_shipping BOOLEAN,
    is_default_billing  BOOLEAN,
    user_id             BIGINT,
    CONSTRAINT pk_address PRIMARY KEY (id)
);

CREATE TABLE author
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       TEXT,
    biography  TEXT,
    product_id BIGINT,
    CONSTRAINT pk_author PRIMARY KEY (id)
);

CREATE TABLE category
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name               TEXT,
    parent_category_id BIGINT,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE event
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name            TEXT,
    description     TEXT,
    start_date      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_date        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    discount_amount DECIMAL,
    event_type      TEXT,
    created_date    TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id)
);

CREATE TABLE favorite
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id BIGINT,
    user_id    BIGINT,
    created_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_favorite PRIMARY KEY (id)
);

CREATE TABLE genres
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        TEXT,
    description TEXT,
    CONSTRAINT pk_genres PRIMARY KEY (id)
);

CREATE TABLE notification
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title        TEXT,
    message      TEXT,
    is_read      BOOLEAN,
    type         TEXT,
    user_id      BIGINT,
    created_date TIMESTAMP WITHOUT TIME ZONE,
    updated_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_notification PRIMARY KEY (id)
);

CREATE TABLE "order"
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_date       TIMESTAMP WITHOUT TIME ZONE,
    total_amount     DECIMAL,
    delivery_address TEXT,
    shipping_method  TEXT,
    delivery_date    TIMESTAMP WITHOUT TIME ZONE,
    delivery_status  TEXT,
    created_date     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_order PRIMARY KEY (id)
);

CREATE TABLE order_feedback
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    rating      INTEGER                                 NOT NULL,
    review_text TEXT,
    review_date TIMESTAMP WITHOUT TIME ZONE,
    order_id    BIGINT,
    CONSTRAINT pk_order_feedback PRIMARY KEY (id)
);

CREATE TABLE order_item
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity   INTEGER,
    unit_price DECIMAL,
    order_id   BIGINT,
    product_id BIGINT,
    CONSTRAINT pk_order_item PRIMARY KEY (id)
);

CREATE TABLE order_status
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    status      TEXT,
    status_date TIMESTAMP WITHOUT TIME ZONE,
    order_id    BIGINT,
    CONSTRAINT pk_order_status PRIMARY KEY (id)
);

CREATE TABLE payment
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    order_id       BIGINT                                  NOT NULL,
    payment_method VARCHAR(255),
    amount         DECIMAL,
    created_date   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_payment PRIMARY KEY (id)
);

CREATE TABLE product
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           TEXT                                    NOT NULL,
    price          DECIMAL(10)                             NOT NULL,
    discount       INTEGER,
    thumbnail      TEXT                                    NOT NULL,
    product_code   TEXT,
    supplier_name  TEXT,
    weight         INTEGER,
    package_size   TEXT,
    content        TEXT,
    publisher      TEXT,
    publish_year   TEXT,
    translator     TEXT,
    language       TEXT,
    chapter        VARCHAR(255),
    page_number    INTEGER,
    brand          TEXT,
    origin         TEXT,
    made_in        TEXT,
    color          TEXT,
    material       TEXT,
    formality      TEXT,
    quantity       INTEGER,
    estimated_date TIMESTAMP WITHOUT TIME ZONE,
    status         TEXT,
    created_date   TIMESTAMP WITHOUT TIME ZONE,
    updated_date   TIMESTAMP WITHOUT TIME ZONE,
    category_id    BIGINT,
    series_id      BIGINT,
    event_id       BIGINT,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE product_genres
(
    genres_id  BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    CONSTRAINT pk_product_genres PRIMARY KEY (genres_id, product_id)
);

CREATE TABLE products_image
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    image_url   TEXT,
    products_id BIGINT,
    CONSTRAINT pk_products_image PRIMARY KEY (id)
);

CREATE TABLE review
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT                                  NOT NULL,
    product_id BIGINT                                  NOT NULL,
    rating     INTEGER                                 NOT NULL,
    comment    TEXT,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_review PRIMARY KEY (id)
);

CREATE TABLE role
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE role_permission
(
    role_id BIGINT NOT NULL,
    name    VARCHAR(255)
);

CREATE TABLE series
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           TEXT,
    newest_chapter VARCHAR(255),
    follower       BIGINT,
    CONSTRAINT pk_series PRIMARY KEY (id)
);

CREATE TABLE transaction
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    action            TEXT,
    action_time       TIMESTAMP WITHOUT TIME ZONE,
    order_id          BIGINT,
    pre_trade_amount  DECIMAL,
    amount            DECIMAL,
    post_trade_amount DECIMAL,
    user_id           BIGINT,
    CONSTRAINT pk_transaction PRIMARY KEY (id)
);

CREATE TABLE "user"
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username     TEXT,
    email        TEXT,
    password     TEXT,
    first_name   TEXT,
    last_name    TEXT,
    gender       BOOLEAN,
    birthday     date,
    avatar_url   TEXT,
    tier         TEXT,
    balance      DECIMAL,
    deleted_date TIMESTAMP WITHOUT TIME ZONE,
    role_id      BIGINT,
    CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE voucher
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code            TEXT,
    discount_amount DECIMAL,
    valid_from      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    valid_to        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    description     TEXT,
    created_date    TIMESTAMP WITHOUT TIME ZONE,
    user_id         BIGINT,
    CONSTRAINT pk_voucher PRIMARY KEY (id)
);

ALTER TABLE address
    ADD CONSTRAINT FK_ADDRESS_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE author
    ADD CONSTRAINT FK_AUTHOR_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE category
    ADD CONSTRAINT FK_CATEGORY_ON_PARENT_CATEGORY FOREIGN KEY (parent_category_id) REFERENCES category (id);

ALTER TABLE favorite
    ADD CONSTRAINT FK_FAVORITE_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE favorite
    ADD CONSTRAINT FK_FAVORITE_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE notification
    ADD CONSTRAINT FK_NOTIFICATION_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE order_feedback
    ADD CONSTRAINT FK_ORDER_FEEDBACK_ON_ORDER FOREIGN KEY (order_id) REFERENCES "order" (id);

ALTER TABLE order_item
    ADD CONSTRAINT FK_ORDER_ITEM_ON_ORDER FOREIGN KEY (order_id) REFERENCES "order" (id);

ALTER TABLE order_item
    ADD CONSTRAINT FK_ORDER_ITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE order_status
    ADD CONSTRAINT FK_ORDER_STATUS_ON_ORDER FOREIGN KEY (order_id) REFERENCES "order" (id);

ALTER TABLE payment
    ADD CONSTRAINT FK_PAYMENT_ON_ORDER FOREIGN KEY (order_id) REFERENCES "order" (id);

ALTER TABLE products_image
    ADD CONSTRAINT FK_PRODUCTS_IMAGE_ON_PRODUCTS FOREIGN KEY (products_id) REFERENCES product (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES category (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_EVENT FOREIGN KEY (event_id) REFERENCES event (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_SERIES FOREIGN KEY (series_id) REFERENCES series (id);

ALTER TABLE review
    ADD CONSTRAINT FK_REVIEW_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE review
    ADD CONSTRAINT FK_REVIEW_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE transaction
    ADD CONSTRAINT FK_TRANSACTION_ON_ORDER FOREIGN KEY (order_id) REFERENCES "order" (id);

ALTER TABLE transaction
    ADD CONSTRAINT FK_TRANSACTION_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE "user"
    ADD CONSTRAINT FK_USER_ON_ROLE FOREIGN KEY (role_id) REFERENCES role (id);

ALTER TABLE voucher
    ADD CONSTRAINT FK_VOUCHER_ON_USER FOREIGN KEY (user_id) REFERENCES "user" (id);

ALTER TABLE product_genres
    ADD CONSTRAINT fk_progen_on_genre FOREIGN KEY (genres_id) REFERENCES genres (id);

ALTER TABLE product_genres
    ADD CONSTRAINT fk_progen_on_product FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE role_permission
    ADD CONSTRAINT fk_role_permission_on_role FOREIGN KEY (role_id) REFERENCES role (id);